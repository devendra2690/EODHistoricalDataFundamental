/*
 * EODHistoricalDataFundamentalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.eodhistoricaldata.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for General type.
 */
public class General {
    private String code;
    private String type;
    private String name;
    private String exchange;
    private String currencyCode;
    private String currencyName;
    private String currencySymbol;
    private String countryName;
    private String countryISO;
    private String iSIN;
    private String cUSIP;
    private String cIK;
    private String employerIdNumber;
    private String fiscalYearEnd;
    private String iPODate;
    private String internationalDomestic;
    private String sector;
    private String industry;
    private String gicSector;
    private String gicGroup;
    private String gicIndustry;
    private String gicSubIndustry;
    private String homeCategory;
    private boolean isDelisted;
    private String description;
    private String address;
    private AddressData addressData;
    private Map<String, GeneratedObject> listings;
    private Map<String, GeneratedObject1> officers;
    private String phone;
    private String webURL;
    private String logoURL;
    private int fullTimeEmployees;
    private String updatedAt;

    /**
     * Default constructor.
     */
    public General() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  type  String value for type.
     * @param  name  String value for name.
     * @param  exchange  String value for exchange.
     * @param  currencyCode  String value for currencyCode.
     * @param  currencyName  String value for currencyName.
     * @param  currencySymbol  String value for currencySymbol.
     * @param  countryName  String value for countryName.
     * @param  countryISO  String value for countryISO.
     * @param  iSIN  String value for iSIN.
     * @param  cUSIP  String value for cUSIP.
     * @param  cIK  String value for cIK.
     * @param  employerIdNumber  String value for employerIdNumber.
     * @param  fiscalYearEnd  String value for fiscalYearEnd.
     * @param  iPODate  String value for iPODate.
     * @param  internationalDomestic  String value for internationalDomestic.
     * @param  sector  String value for sector.
     * @param  industry  String value for industry.
     * @param  gicSector  String value for gicSector.
     * @param  gicGroup  String value for gicGroup.
     * @param  gicIndustry  String value for gicIndustry.
     * @param  gicSubIndustry  String value for gicSubIndustry.
     * @param  homeCategory  String value for homeCategory.
     * @param  isDelisted  boolean value for isDelisted.
     * @param  description  String value for description.
     * @param  address  String value for address.
     * @param  addressData  AddressData value for addressData.
     * @param  listings  Map of String, value for listings.
     * @param  officers  Map of String, value for officers.
     * @param  phone  String value for phone.
     * @param  webURL  String value for webURL.
     * @param  logoURL  String value for logoURL.
     * @param  fullTimeEmployees  int value for fullTimeEmployees.
     * @param  updatedAt  String value for updatedAt.
     */
    public General(
            String code,
            String type,
            String name,
            String exchange,
            String currencyCode,
            String currencyName,
            String currencySymbol,
            String countryName,
            String countryISO,
            String iSIN,
            String cUSIP,
            String cIK,
            String employerIdNumber,
            String fiscalYearEnd,
            String iPODate,
            String internationalDomestic,
            String sector,
            String industry,
            String gicSector,
            String gicGroup,
            String gicIndustry,
            String gicSubIndustry,
            String homeCategory,
            boolean isDelisted,
            String description,
            String address,
            AddressData addressData,
            Map<String, GeneratedObject> listings,
            Map<String, GeneratedObject1> officers,
            String phone,
            String webURL,
            String logoURL,
            int fullTimeEmployees,
            String updatedAt) {
        this.code = code;
        this.type = type;
        this.name = name;
        this.exchange = exchange;
        this.currencyCode = currencyCode;
        this.currencyName = currencyName;
        this.currencySymbol = currencySymbol;
        this.countryName = countryName;
        this.countryISO = countryISO;
        this.iSIN = iSIN;
        this.cUSIP = cUSIP;
        this.cIK = cIK;
        this.employerIdNumber = employerIdNumber;
        this.fiscalYearEnd = fiscalYearEnd;
        this.iPODate = iPODate;
        this.internationalDomestic = internationalDomestic;
        this.sector = sector;
        this.industry = industry;
        this.gicSector = gicSector;
        this.gicGroup = gicGroup;
        this.gicIndustry = gicIndustry;
        this.gicSubIndustry = gicSubIndustry;
        this.homeCategory = homeCategory;
        this.isDelisted = isDelisted;
        this.description = description;
        this.address = address;
        this.addressData = addressData;
        this.listings = listings;
        this.officers = officers;
        this.phone = phone;
        this.webURL = webURL;
        this.logoURL = logoURL;
        this.fullTimeEmployees = fullTimeEmployees;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("Code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("Code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("Type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("Type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("Name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Exchange.
     * @return Returns the String
     */
    @JsonGetter("Exchange")
    public String getExchange() {
        return exchange;
    }

    /**
     * Setter for Exchange.
     * @param exchange Value for String
     */
    @JsonSetter("Exchange")
    public void setExchange(String exchange) {
        this.exchange = exchange;
    }

    /**
     * Getter for CurrencyCode.
     * @return Returns the String
     */
    @JsonGetter("CurrencyCode")
    public String getCurrencyCode() {
        return currencyCode;
    }

    /**
     * Setter for CurrencyCode.
     * @param currencyCode Value for String
     */
    @JsonSetter("CurrencyCode")
    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    /**
     * Getter for CurrencyName.
     * @return Returns the String
     */
    @JsonGetter("CurrencyName")
    public String getCurrencyName() {
        return currencyName;
    }

    /**
     * Setter for CurrencyName.
     * @param currencyName Value for String
     */
    @JsonSetter("CurrencyName")
    public void setCurrencyName(String currencyName) {
        this.currencyName = currencyName;
    }

    /**
     * Getter for CurrencySymbol.
     * @return Returns the String
     */
    @JsonGetter("CurrencySymbol")
    public String getCurrencySymbol() {
        return currencySymbol;
    }

    /**
     * Setter for CurrencySymbol.
     * @param currencySymbol Value for String
     */
    @JsonSetter("CurrencySymbol")
    public void setCurrencySymbol(String currencySymbol) {
        this.currencySymbol = currencySymbol;
    }

    /**
     * Getter for CountryName.
     * @return Returns the String
     */
    @JsonGetter("CountryName")
    public String getCountryName() {
        return countryName;
    }

    /**
     * Setter for CountryName.
     * @param countryName Value for String
     */
    @JsonSetter("CountryName")
    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    /**
     * Getter for CountryISO.
     * @return Returns the String
     */
    @JsonGetter("CountryISO")
    public String getCountryISO() {
        return countryISO;
    }

    /**
     * Setter for CountryISO.
     * @param countryISO Value for String
     */
    @JsonSetter("CountryISO")
    public void setCountryISO(String countryISO) {
        this.countryISO = countryISO;
    }

    /**
     * Getter for ISIN.
     * @return Returns the String
     */
    @JsonGetter("ISIN")
    public String getISIN() {
        return iSIN;
    }

    /**
     * Setter for ISIN.
     * @param iSIN Value for String
     */
    @JsonSetter("ISIN")
    public void setISIN(String iSIN) {
        this.iSIN = iSIN;
    }

    /**
     * Getter for CUSIP.
     * @return Returns the String
     */
    @JsonGetter("CUSIP")
    public String getCUSIP() {
        return cUSIP;
    }

    /**
     * Setter for CUSIP.
     * @param cUSIP Value for String
     */
    @JsonSetter("CUSIP")
    public void setCUSIP(String cUSIP) {
        this.cUSIP = cUSIP;
    }

    /**
     * Getter for CIK.
     * @return Returns the String
     */
    @JsonGetter("CIK")
    public String getCIK() {
        return cIK;
    }

    /**
     * Setter for CIK.
     * @param cIK Value for String
     */
    @JsonSetter("CIK")
    public void setCIK(String cIK) {
        this.cIK = cIK;
    }

    /**
     * Getter for EmployerIdNumber.
     * @return Returns the String
     */
    @JsonGetter("EmployerIdNumber")
    public String getEmployerIdNumber() {
        return employerIdNumber;
    }

    /**
     * Setter for EmployerIdNumber.
     * @param employerIdNumber Value for String
     */
    @JsonSetter("EmployerIdNumber")
    public void setEmployerIdNumber(String employerIdNumber) {
        this.employerIdNumber = employerIdNumber;
    }

    /**
     * Getter for FiscalYearEnd.
     * @return Returns the String
     */
    @JsonGetter("FiscalYearEnd")
    public String getFiscalYearEnd() {
        return fiscalYearEnd;
    }

    /**
     * Setter for FiscalYearEnd.
     * @param fiscalYearEnd Value for String
     */
    @JsonSetter("FiscalYearEnd")
    public void setFiscalYearEnd(String fiscalYearEnd) {
        this.fiscalYearEnd = fiscalYearEnd;
    }

    /**
     * Getter for IPODate.
     * @return Returns the String
     */
    @JsonGetter("IPODate")
    public String getIPODate() {
        return iPODate;
    }

    /**
     * Setter for IPODate.
     * @param iPODate Value for String
     */
    @JsonSetter("IPODate")
    public void setIPODate(String iPODate) {
        this.iPODate = iPODate;
    }

    /**
     * Getter for InternationalDomestic.
     * @return Returns the String
     */
    @JsonGetter("InternationalDomestic")
    public String getInternationalDomestic() {
        return internationalDomestic;
    }

    /**
     * Setter for InternationalDomestic.
     * @param internationalDomestic Value for String
     */
    @JsonSetter("InternationalDomestic")
    public void setInternationalDomestic(String internationalDomestic) {
        this.internationalDomestic = internationalDomestic;
    }

    /**
     * Getter for Sector.
     * @return Returns the String
     */
    @JsonGetter("Sector")
    public String getSector() {
        return sector;
    }

    /**
     * Setter for Sector.
     * @param sector Value for String
     */
    @JsonSetter("Sector")
    public void setSector(String sector) {
        this.sector = sector;
    }

    /**
     * Getter for Industry.
     * @return Returns the String
     */
    @JsonGetter("Industry")
    public String getIndustry() {
        return industry;
    }

    /**
     * Setter for Industry.
     * @param industry Value for String
     */
    @JsonSetter("Industry")
    public void setIndustry(String industry) {
        this.industry = industry;
    }

    /**
     * Getter for GicSector.
     * @return Returns the String
     */
    @JsonGetter("GicSector")
    public String getGicSector() {
        return gicSector;
    }

    /**
     * Setter for GicSector.
     * @param gicSector Value for String
     */
    @JsonSetter("GicSector")
    public void setGicSector(String gicSector) {
        this.gicSector = gicSector;
    }

    /**
     * Getter for GicGroup.
     * @return Returns the String
     */
    @JsonGetter("GicGroup")
    public String getGicGroup() {
        return gicGroup;
    }

    /**
     * Setter for GicGroup.
     * @param gicGroup Value for String
     */
    @JsonSetter("GicGroup")
    public void setGicGroup(String gicGroup) {
        this.gicGroup = gicGroup;
    }

    /**
     * Getter for GicIndustry.
     * @return Returns the String
     */
    @JsonGetter("GicIndustry")
    public String getGicIndustry() {
        return gicIndustry;
    }

    /**
     * Setter for GicIndustry.
     * @param gicIndustry Value for String
     */
    @JsonSetter("GicIndustry")
    public void setGicIndustry(String gicIndustry) {
        this.gicIndustry = gicIndustry;
    }

    /**
     * Getter for GicSubIndustry.
     * @return Returns the String
     */
    @JsonGetter("GicSubIndustry")
    public String getGicSubIndustry() {
        return gicSubIndustry;
    }

    /**
     * Setter for GicSubIndustry.
     * @param gicSubIndustry Value for String
     */
    @JsonSetter("GicSubIndustry")
    public void setGicSubIndustry(String gicSubIndustry) {
        this.gicSubIndustry = gicSubIndustry;
    }

    /**
     * Getter for HomeCategory.
     * @return Returns the String
     */
    @JsonGetter("HomeCategory")
    public String getHomeCategory() {
        return homeCategory;
    }

    /**
     * Setter for HomeCategory.
     * @param homeCategory Value for String
     */
    @JsonSetter("HomeCategory")
    public void setHomeCategory(String homeCategory) {
        this.homeCategory = homeCategory;
    }

    /**
     * Getter for IsDelisted.
     * @return Returns the boolean
     */
    @JsonGetter("IsDelisted")
    public boolean getIsDelisted() {
        return isDelisted;
    }

    /**
     * Setter for IsDelisted.
     * @param isDelisted Value for boolean
     */
    @JsonSetter("IsDelisted")
    public void setIsDelisted(boolean isDelisted) {
        this.isDelisted = isDelisted;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("Description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("Description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Address.
     * @return Returns the String
     */
    @JsonGetter("Address")
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * @param address Value for String
     */
    @JsonSetter("Address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for AddressData.
     * @return Returns the AddressData
     */
    @JsonGetter("AddressData")
    public AddressData getAddressData() {
        return addressData;
    }

    /**
     * Setter for AddressData.
     * @param addressData Value for AddressData
     */
    @JsonSetter("AddressData")
    public void setAddressData(AddressData addressData) {
        this.addressData = addressData;
    }

    /**
     * Getter for Listings.
     * @return Returns the Map of String, GeneratedObject
     */
    @JsonGetter("Listings")
    public Map<String, GeneratedObject> getListings() {
        return listings;
    }

    /**
     * Setter for Listings.
     * @param listings Value for Map of String, GeneratedObject
     */
    @JsonSetter("Listings")
    public void setListings(Map<String, GeneratedObject> listings) {
        this.listings = listings;
    }

    /**
     * Getter for Officers.
     * @return Returns the Map of String, GeneratedObject1
     */
    @JsonGetter("Officers")
    public Map<String, GeneratedObject1> getOfficers() {
        return officers;
    }

    /**
     * Setter for Officers.
     * @param officers Value for Map of String, GeneratedObject1
     */
    @JsonSetter("Officers")
    public void setOfficers(Map<String, GeneratedObject1> officers) {
        this.officers = officers;
    }

    /**
     * Getter for Phone.
     * @return Returns the String
     */
    @JsonGetter("Phone")
    public String getPhone() {
        return phone;
    }

    /**
     * Setter for Phone.
     * @param phone Value for String
     */
    @JsonSetter("Phone")
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * Getter for WebURL.
     * @return Returns the String
     */
    @JsonGetter("WebURL")
    public String getWebURL() {
        return webURL;
    }

    /**
     * Setter for WebURL.
     * @param webURL Value for String
     */
    @JsonSetter("WebURL")
    public void setWebURL(String webURL) {
        this.webURL = webURL;
    }

    /**
     * Getter for LogoURL.
     * @return Returns the String
     */
    @JsonGetter("LogoURL")
    public String getLogoURL() {
        return logoURL;
    }

    /**
     * Setter for LogoURL.
     * @param logoURL Value for String
     */
    @JsonSetter("LogoURL")
    public void setLogoURL(String logoURL) {
        this.logoURL = logoURL;
    }

    /**
     * Getter for FullTimeEmployees.
     * @return Returns the int
     */
    @JsonGetter("FullTimeEmployees")
    public int getFullTimeEmployees() {
        return fullTimeEmployees;
    }

    /**
     * Setter for FullTimeEmployees.
     * @param fullTimeEmployees Value for int
     */
    @JsonSetter("FullTimeEmployees")
    public void setFullTimeEmployees(int fullTimeEmployees) {
        this.fullTimeEmployees = fullTimeEmployees;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    @JsonGetter("UpdatedAt")
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("UpdatedAt")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Converts this General into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "General [" + "code=" + code + ", type=" + type + ", name=" + name + ", exchange="
                + exchange + ", currencyCode=" + currencyCode + ", currencyName=" + currencyName
                + ", currencySymbol=" + currencySymbol + ", countryName=" + countryName
                + ", countryISO=" + countryISO + ", iSIN=" + iSIN + ", cUSIP=" + cUSIP + ", cIK="
                + cIK + ", employerIdNumber=" + employerIdNumber + ", fiscalYearEnd="
                + fiscalYearEnd + ", iPODate=" + iPODate + ", internationalDomestic="
                + internationalDomestic + ", sector=" + sector + ", industry=" + industry
                + ", gicSector=" + gicSector + ", gicGroup=" + gicGroup + ", gicIndustry="
                + gicIndustry + ", gicSubIndustry=" + gicSubIndustry + ", homeCategory="
                + homeCategory + ", isDelisted=" + isDelisted + ", description=" + description
                + ", address=" + address + ", addressData=" + addressData + ", listings=" + listings
                + ", officers=" + officers + ", phone=" + phone + ", webURL=" + webURL
                + ", logoURL=" + logoURL + ", fullTimeEmployees=" + fullTimeEmployees
                + ", updatedAt=" + updatedAt + "]";
    }

    /**
     * Builds a new {@link General.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link General.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(code, type, name, exchange, currencyCode, currencyName,
                currencySymbol, countryName, countryISO, iSIN, cUSIP, cIK, employerIdNumber,
                fiscalYearEnd, iPODate, internationalDomestic, sector, industry, gicSector,
                gicGroup, gicIndustry, gicSubIndustry, homeCategory, isDelisted, description,
                address, addressData, listings, officers, phone, webURL, logoURL, fullTimeEmployees,
                updatedAt);
        return builder;
    }

    /**
     * Class to build instances of {@link General}.
     */
    public static class Builder {
        private String code;
        private String type;
        private String name;
        private String exchange;
        private String currencyCode;
        private String currencyName;
        private String currencySymbol;
        private String countryName;
        private String countryISO;
        private String iSIN;
        private String cUSIP;
        private String cIK;
        private String employerIdNumber;
        private String fiscalYearEnd;
        private String iPODate;
        private String internationalDomestic;
        private String sector;
        private String industry;
        private String gicSector;
        private String gicGroup;
        private String gicIndustry;
        private String gicSubIndustry;
        private String homeCategory;
        private boolean isDelisted;
        private String description;
        private String address;
        private AddressData addressData;
        private Map<String, GeneratedObject> listings;
        private Map<String, GeneratedObject1> officers;
        private String phone;
        private String webURL;
        private String logoURL;
        private int fullTimeEmployees;
        private String updatedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  code  String value for code.
         * @param  type  String value for type.
         * @param  name  String value for name.
         * @param  exchange  String value for exchange.
         * @param  currencyCode  String value for currencyCode.
         * @param  currencyName  String value for currencyName.
         * @param  currencySymbol  String value for currencySymbol.
         * @param  countryName  String value for countryName.
         * @param  countryISO  String value for countryISO.
         * @param  iSIN  String value for iSIN.
         * @param  cUSIP  String value for cUSIP.
         * @param  cIK  String value for cIK.
         * @param  employerIdNumber  String value for employerIdNumber.
         * @param  fiscalYearEnd  String value for fiscalYearEnd.
         * @param  iPODate  String value for iPODate.
         * @param  internationalDomestic  String value for internationalDomestic.
         * @param  sector  String value for sector.
         * @param  industry  String value for industry.
         * @param  gicSector  String value for gicSector.
         * @param  gicGroup  String value for gicGroup.
         * @param  gicIndustry  String value for gicIndustry.
         * @param  gicSubIndustry  String value for gicSubIndustry.
         * @param  homeCategory  String value for homeCategory.
         * @param  isDelisted  boolean value for isDelisted.
         * @param  description  String value for description.
         * @param  address  String value for address.
         * @param  addressData  AddressData value for addressData.
         * @param  listings  Map of String, value for listings.
         * @param  officers  Map of String, value for officers.
         * @param  phone  String value for phone.
         * @param  webURL  String value for webURL.
         * @param  logoURL  String value for logoURL.
         * @param  fullTimeEmployees  int value for fullTimeEmployees.
         * @param  updatedAt  String value for updatedAt.
         */
        public Builder(String code, String type, String name, String exchange, String currencyCode,
                String currencyName, String currencySymbol, String countryName, String countryISO,
                String iSIN, String cUSIP, String cIK, String employerIdNumber,
                String fiscalYearEnd, String iPODate, String internationalDomestic, String sector,
                String industry, String gicSector, String gicGroup, String gicIndustry,
                String gicSubIndustry, String homeCategory, boolean isDelisted, String description,
                String address, AddressData addressData, Map<String, GeneratedObject> listings,
                Map<String, GeneratedObject1> officers, String phone, String webURL, String logoURL,
                int fullTimeEmployees, String updatedAt) {
            this.code = code;
            this.type = type;
            this.name = name;
            this.exchange = exchange;
            this.currencyCode = currencyCode;
            this.currencyName = currencyName;
            this.currencySymbol = currencySymbol;
            this.countryName = countryName;
            this.countryISO = countryISO;
            this.iSIN = iSIN;
            this.cUSIP = cUSIP;
            this.cIK = cIK;
            this.employerIdNumber = employerIdNumber;
            this.fiscalYearEnd = fiscalYearEnd;
            this.iPODate = iPODate;
            this.internationalDomestic = internationalDomestic;
            this.sector = sector;
            this.industry = industry;
            this.gicSector = gicSector;
            this.gicGroup = gicGroup;
            this.gicIndustry = gicIndustry;
            this.gicSubIndustry = gicSubIndustry;
            this.homeCategory = homeCategory;
            this.isDelisted = isDelisted;
            this.description = description;
            this.address = address;
            this.addressData = addressData;
            this.listings = listings;
            this.officers = officers;
            this.phone = phone;
            this.webURL = webURL;
            this.logoURL = logoURL;
            this.fullTimeEmployees = fullTimeEmployees;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for exchange.
         * @param  exchange  String value for exchange.
         * @return Builder
         */
        public Builder exchange(String exchange) {
            this.exchange = exchange;
            return this;
        }

        /**
         * Setter for currencyCode.
         * @param  currencyCode  String value for currencyCode.
         * @return Builder
         */
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = currencyCode;
            return this;
        }

        /**
         * Setter for currencyName.
         * @param  currencyName  String value for currencyName.
         * @return Builder
         */
        public Builder currencyName(String currencyName) {
            this.currencyName = currencyName;
            return this;
        }

        /**
         * Setter for currencySymbol.
         * @param  currencySymbol  String value for currencySymbol.
         * @return Builder
         */
        public Builder currencySymbol(String currencySymbol) {
            this.currencySymbol = currencySymbol;
            return this;
        }

        /**
         * Setter for countryName.
         * @param  countryName  String value for countryName.
         * @return Builder
         */
        public Builder countryName(String countryName) {
            this.countryName = countryName;
            return this;
        }

        /**
         * Setter for countryISO.
         * @param  countryISO  String value for countryISO.
         * @return Builder
         */
        public Builder countryISO(String countryISO) {
            this.countryISO = countryISO;
            return this;
        }

        /**
         * Setter for iSIN.
         * @param  iSIN  String value for iSIN.
         * @return Builder
         */
        public Builder iSIN(String iSIN) {
            this.iSIN = iSIN;
            return this;
        }

        /**
         * Setter for cUSIP.
         * @param  cUSIP  String value for cUSIP.
         * @return Builder
         */
        public Builder cUSIP(String cUSIP) {
            this.cUSIP = cUSIP;
            return this;
        }

        /**
         * Setter for cIK.
         * @param  cIK  String value for cIK.
         * @return Builder
         */
        public Builder cIK(String cIK) {
            this.cIK = cIK;
            return this;
        }

        /**
         * Setter for employerIdNumber.
         * @param  employerIdNumber  String value for employerIdNumber.
         * @return Builder
         */
        public Builder employerIdNumber(String employerIdNumber) {
            this.employerIdNumber = employerIdNumber;
            return this;
        }

        /**
         * Setter for fiscalYearEnd.
         * @param  fiscalYearEnd  String value for fiscalYearEnd.
         * @return Builder
         */
        public Builder fiscalYearEnd(String fiscalYearEnd) {
            this.fiscalYearEnd = fiscalYearEnd;
            return this;
        }

        /**
         * Setter for iPODate.
         * @param  iPODate  String value for iPODate.
         * @return Builder
         */
        public Builder iPODate(String iPODate) {
            this.iPODate = iPODate;
            return this;
        }

        /**
         * Setter for internationalDomestic.
         * @param  internationalDomestic  String value for internationalDomestic.
         * @return Builder
         */
        public Builder internationalDomestic(String internationalDomestic) {
            this.internationalDomestic = internationalDomestic;
            return this;
        }

        /**
         * Setter for sector.
         * @param  sector  String value for sector.
         * @return Builder
         */
        public Builder sector(String sector) {
            this.sector = sector;
            return this;
        }

        /**
         * Setter for industry.
         * @param  industry  String value for industry.
         * @return Builder
         */
        public Builder industry(String industry) {
            this.industry = industry;
            return this;
        }

        /**
         * Setter for gicSector.
         * @param  gicSector  String value for gicSector.
         * @return Builder
         */
        public Builder gicSector(String gicSector) {
            this.gicSector = gicSector;
            return this;
        }

        /**
         * Setter for gicGroup.
         * @param  gicGroup  String value for gicGroup.
         * @return Builder
         */
        public Builder gicGroup(String gicGroup) {
            this.gicGroup = gicGroup;
            return this;
        }

        /**
         * Setter for gicIndustry.
         * @param  gicIndustry  String value for gicIndustry.
         * @return Builder
         */
        public Builder gicIndustry(String gicIndustry) {
            this.gicIndustry = gicIndustry;
            return this;
        }

        /**
         * Setter for gicSubIndustry.
         * @param  gicSubIndustry  String value for gicSubIndustry.
         * @return Builder
         */
        public Builder gicSubIndustry(String gicSubIndustry) {
            this.gicSubIndustry = gicSubIndustry;
            return this;
        }

        /**
         * Setter for homeCategory.
         * @param  homeCategory  String value for homeCategory.
         * @return Builder
         */
        public Builder homeCategory(String homeCategory) {
            this.homeCategory = homeCategory;
            return this;
        }

        /**
         * Setter for isDelisted.
         * @param  isDelisted  boolean value for isDelisted.
         * @return Builder
         */
        public Builder isDelisted(boolean isDelisted) {
            this.isDelisted = isDelisted;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for addressData.
         * @param  addressData  AddressData value for addressData.
         * @return Builder
         */
        public Builder addressData(AddressData addressData) {
            this.addressData = addressData;
            return this;
        }

        /**
         * Setter for listings.
         * @param  listings  Map of String, value for listings.
         * @return Builder
         */
        public Builder listings(Map<String, GeneratedObject> listings) {
            this.listings = listings;
            return this;
        }

        /**
         * Setter for officers.
         * @param  officers  Map of String, value for officers.
         * @return Builder
         */
        public Builder officers(Map<String, GeneratedObject1> officers) {
            this.officers = officers;
            return this;
        }

        /**
         * Setter for phone.
         * @param  phone  String value for phone.
         * @return Builder
         */
        public Builder phone(String phone) {
            this.phone = phone;
            return this;
        }

        /**
         * Setter for webURL.
         * @param  webURL  String value for webURL.
         * @return Builder
         */
        public Builder webURL(String webURL) {
            this.webURL = webURL;
            return this;
        }

        /**
         * Setter for logoURL.
         * @param  logoURL  String value for logoURL.
         * @return Builder
         */
        public Builder logoURL(String logoURL) {
            this.logoURL = logoURL;
            return this;
        }

        /**
         * Setter for fullTimeEmployees.
         * @param  fullTimeEmployees  int value for fullTimeEmployees.
         * @return Builder
         */
        public Builder fullTimeEmployees(int fullTimeEmployees) {
            this.fullTimeEmployees = fullTimeEmployees;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Builds a new {@link General} object using the set fields.
         * @return {@link General}
         */
        public General build() {
            return new General(code, type, name, exchange, currencyCode, currencyName,
                    currencySymbol, countryName, countryISO, iSIN, cUSIP, cIK, employerIdNumber,
                    fiscalYearEnd, iPODate, internationalDomestic, sector, industry, gicSector,
                    gicGroup, gicIndustry, gicSubIndustry, homeCategory, isDelisted, description,
                    address, addressData, listings, officers, phone, webURL, logoURL,
                    fullTimeEmployees, updatedAt);
        }
    }
}
