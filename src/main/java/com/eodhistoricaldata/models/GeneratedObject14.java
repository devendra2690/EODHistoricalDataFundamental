/*
 * EODHistoricalDataFundamentalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.eodhistoricaldata.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for GeneratedObject14 type.
 */
public class GeneratedObject14 {
    private String reportDate;
    private String date;
    private String beforeAfterMarket;
    private String currency;
    private String epsActual;
    private String epsEstimate;
    private String epsDifference;
    private String surprisePercent;

    /**
     * Default constructor.
     */
    public GeneratedObject14() {
    }

    /**
     * Initialization constructor.
     * @param  reportDate  String value for reportDate.
     * @param  date  String value for date.
     * @param  beforeAfterMarket  String value for beforeAfterMarket.
     * @param  currency  String value for currency.
     * @param  epsActual  String value for epsActual.
     * @param  epsEstimate  String value for epsEstimate.
     * @param  epsDifference  String value for epsDifference.
     * @param  surprisePercent  String value for surprisePercent.
     */
    public GeneratedObject14(
            String reportDate,
            String date,
            String beforeAfterMarket,
            String currency,
            String epsActual,
            String epsEstimate,
            String epsDifference,
            String surprisePercent) {
        this.reportDate = reportDate;
        this.date = date;
        this.beforeAfterMarket = beforeAfterMarket;
        this.currency = currency;
        this.epsActual = epsActual;
        this.epsEstimate = epsEstimate;
        this.epsDifference = epsDifference;
        this.surprisePercent = surprisePercent;
    }

    /**
     * Getter for ReportDate.
     * @return Returns the String
     */
    @JsonGetter("reportDate")
    public String getReportDate() {
        return reportDate;
    }

    /**
     * Setter for ReportDate.
     * @param reportDate Value for String
     */
    @JsonSetter("reportDate")
    public void setReportDate(String reportDate) {
        this.reportDate = reportDate;
    }

    /**
     * Getter for Date.
     * @return Returns the String
     */
    @JsonGetter("date")
    public String getDate() {
        return date;
    }

    /**
     * Setter for Date.
     * @param date Value for String
     */
    @JsonSetter("date")
    public void setDate(String date) {
        this.date = date;
    }

    /**
     * Getter for BeforeAfterMarket.
     * @return Returns the String
     */
    @JsonGetter("beforeAfterMarket")
    public String getBeforeAfterMarket() {
        return beforeAfterMarket;
    }

    /**
     * Setter for BeforeAfterMarket.
     * @param beforeAfterMarket Value for String
     */
    @JsonSetter("beforeAfterMarket")
    public void setBeforeAfterMarket(String beforeAfterMarket) {
        this.beforeAfterMarket = beforeAfterMarket;
    }

    /**
     * Getter for Currency.
     * @return Returns the String
     */
    @JsonGetter("currency")
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for EpsActual.
     * @return Returns the String
     */
    @JsonGetter("epsActual")
    public String getEpsActual() {
        return epsActual;
    }

    /**
     * Setter for EpsActual.
     * @param epsActual Value for String
     */
    @JsonSetter("epsActual")
    public void setEpsActual(String epsActual) {
        this.epsActual = epsActual;
    }

    /**
     * Getter for EpsEstimate.
     * @return Returns the String
     */
    @JsonGetter("epsEstimate")
    public String getEpsEstimate() {
        return epsEstimate;
    }

    /**
     * Setter for EpsEstimate.
     * @param epsEstimate Value for String
     */
    @JsonSetter("epsEstimate")
    public void setEpsEstimate(String epsEstimate) {
        this.epsEstimate = epsEstimate;
    }

    /**
     * Getter for EpsDifference.
     * @return Returns the String
     */
    @JsonGetter("epsDifference")
    public String getEpsDifference() {
        return epsDifference;
    }

    /**
     * Setter for EpsDifference.
     * @param epsDifference Value for String
     */
    @JsonSetter("epsDifference")
    public void setEpsDifference(String epsDifference) {
        this.epsDifference = epsDifference;
    }

    /**
     * Getter for SurprisePercent.
     * @return Returns the String
     */
    @JsonGetter("surprisePercent")
    public String getSurprisePercent() {
        return surprisePercent;
    }

    /**
     * Setter for SurprisePercent.
     * @param surprisePercent Value for String
     */
    @JsonSetter("surprisePercent")
    public void setSurprisePercent(String surprisePercent) {
        this.surprisePercent = surprisePercent;
    }

    /**
     * Converts this GeneratedObject14 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GeneratedObject14 [" + "reportDate=" + reportDate + ", date=" + date
                + ", beforeAfterMarket=" + beforeAfterMarket + ", currency=" + currency
                + ", epsActual=" + epsActual + ", epsEstimate=" + epsEstimate + ", epsDifference="
                + epsDifference + ", surprisePercent=" + surprisePercent + "]";
    }

    /**
     * Builds a new {@link GeneratedObject14.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GeneratedObject14.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(reportDate, date, beforeAfterMarket, currency, epsActual,
                epsEstimate, epsDifference, surprisePercent);
        return builder;
    }

    /**
     * Class to build instances of {@link GeneratedObject14}.
     */
    public static class Builder {
        private String reportDate;
        private String date;
        private String beforeAfterMarket;
        private String currency;
        private String epsActual;
        private String epsEstimate;
        private String epsDifference;
        private String surprisePercent;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  reportDate  String value for reportDate.
         * @param  date  String value for date.
         * @param  beforeAfterMarket  String value for beforeAfterMarket.
         * @param  currency  String value for currency.
         * @param  epsActual  String value for epsActual.
         * @param  epsEstimate  String value for epsEstimate.
         * @param  epsDifference  String value for epsDifference.
         * @param  surprisePercent  String value for surprisePercent.
         */
        public Builder(String reportDate, String date, String beforeAfterMarket, String currency,
                String epsActual, String epsEstimate, String epsDifference,
                String surprisePercent) {
            this.reportDate = reportDate;
            this.date = date;
            this.beforeAfterMarket = beforeAfterMarket;
            this.currency = currency;
            this.epsActual = epsActual;
            this.epsEstimate = epsEstimate;
            this.epsDifference = epsDifference;
            this.surprisePercent = surprisePercent;
        }

        /**
         * Setter for reportDate.
         * @param  reportDate  String value for reportDate.
         * @return Builder
         */
        public Builder reportDate(String reportDate) {
            this.reportDate = reportDate;
            return this;
        }

        /**
         * Setter for date.
         * @param  date  String value for date.
         * @return Builder
         */
        public Builder date(String date) {
            this.date = date;
            return this;
        }

        /**
         * Setter for beforeAfterMarket.
         * @param  beforeAfterMarket  String value for beforeAfterMarket.
         * @return Builder
         */
        public Builder beforeAfterMarket(String beforeAfterMarket) {
            this.beforeAfterMarket = beforeAfterMarket;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for epsActual.
         * @param  epsActual  String value for epsActual.
         * @return Builder
         */
        public Builder epsActual(String epsActual) {
            this.epsActual = epsActual;
            return this;
        }

        /**
         * Setter for epsEstimate.
         * @param  epsEstimate  String value for epsEstimate.
         * @return Builder
         */
        public Builder epsEstimate(String epsEstimate) {
            this.epsEstimate = epsEstimate;
            return this;
        }

        /**
         * Setter for epsDifference.
         * @param  epsDifference  String value for epsDifference.
         * @return Builder
         */
        public Builder epsDifference(String epsDifference) {
            this.epsDifference = epsDifference;
            return this;
        }

        /**
         * Setter for surprisePercent.
         * @param  surprisePercent  String value for surprisePercent.
         * @return Builder
         */
        public Builder surprisePercent(String surprisePercent) {
            this.surprisePercent = surprisePercent;
            return this;
        }

        /**
         * Builds a new {@link GeneratedObject14} object using the set fields.
         * @return {@link GeneratedObject14}
         */
        public GeneratedObject14 build() {
            return new GeneratedObject14(reportDate, date, beforeAfterMarket, currency, epsActual,
                    epsEstimate, epsDifference, surprisePercent);
        }
    }
}
