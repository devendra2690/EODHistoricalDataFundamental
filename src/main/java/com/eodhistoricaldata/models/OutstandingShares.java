/*
 * EODHistoricalDataFundamentalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.eodhistoricaldata.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for OutstandingShares type.
 */
public class OutstandingShares {
    private Map<String, GeneratedObject11> annual;
    private Map<String, GeneratedObject13> quarterly;

    /**
     * Default constructor.
     */
    public OutstandingShares() {
    }

    /**
     * Initialization constructor.
     * @param  annual  Map of String, value for annual.
     * @param  quarterly  Map of String, value for quarterly.
     */
    public OutstandingShares(
            Map<String, GeneratedObject11> annual,
            Map<String, GeneratedObject13> quarterly) {
        this.annual = annual;
        this.quarterly = quarterly;
    }

    /**
     * Getter for Annual.
     * @return Returns the Map of String, GeneratedObject11
     */
    @JsonGetter("annual")
    public Map<String, GeneratedObject11> getAnnual() {
        return annual;
    }

    /**
     * Setter for Annual.
     * @param annual Value for Map of String, GeneratedObject11
     */
    @JsonSetter("annual")
    public void setAnnual(Map<String, GeneratedObject11> annual) {
        this.annual = annual;
    }

    /**
     * Getter for Quarterly.
     * @return Returns the Map of String, GeneratedObject13
     */
    @JsonGetter("quarterly")
    public Map<String, GeneratedObject13> getQuarterly() {
        return quarterly;
    }

    /**
     * Setter for Quarterly.
     * @param quarterly Value for Map of String, GeneratedObject13
     */
    @JsonSetter("quarterly")
    public void setQuarterly(Map<String, GeneratedObject13> quarterly) {
        this.quarterly = quarterly;
    }

    /**
     * Converts this OutstandingShares into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OutstandingShares [" + "annual=" + annual + ", quarterly=" + quarterly + "]";
    }

    /**
     * Builds a new {@link OutstandingShares.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OutstandingShares.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(annual, quarterly);
        return builder;
    }

    /**
     * Class to build instances of {@link OutstandingShares}.
     */
    public static class Builder {
        private Map<String, GeneratedObject11> annual;
        private Map<String, GeneratedObject13> quarterly;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  annual  Map of String, value for annual.
         * @param  quarterly  Map of String, value for quarterly.
         */
        public Builder(Map<String, GeneratedObject11> annual,
                Map<String, GeneratedObject13> quarterly) {
            this.annual = annual;
            this.quarterly = quarterly;
        }

        /**
         * Setter for annual.
         * @param  annual  Map of String, value for annual.
         * @return Builder
         */
        public Builder annual(Map<String, GeneratedObject11> annual) {
            this.annual = annual;
            return this;
        }

        /**
         * Setter for quarterly.
         * @param  quarterly  Map of String, value for quarterly.
         * @return Builder
         */
        public Builder quarterly(Map<String, GeneratedObject13> quarterly) {
            this.quarterly = quarterly;
            return this;
        }

        /**
         * Builds a new {@link OutstandingShares} object using the set fields.
         * @return {@link OutstandingShares}
         */
        public OutstandingShares build() {
            return new OutstandingShares(annual, quarterly);
        }
    }
}
