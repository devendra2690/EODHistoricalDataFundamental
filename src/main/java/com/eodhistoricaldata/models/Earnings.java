/*
 * EODHistoricalDataFundamentalLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.eodhistoricaldata.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for Earnings type.
 */
public class Earnings {
    private Map<String, GeneratedObject14> history;
    private Map<String, GeneratedObject15> trend;
    private Map<String, GeneratedObject16> annual;

    /**
     * Default constructor.
     */
    public Earnings() {
    }

    /**
     * Initialization constructor.
     * @param  history  Map of String, value for history.
     * @param  trend  Map of String, value for trend.
     * @param  annual  Map of String, value for annual.
     */
    public Earnings(
            Map<String, GeneratedObject14> history,
            Map<String, GeneratedObject15> trend,
            Map<String, GeneratedObject16> annual) {
        this.history = history;
        this.trend = trend;
        this.annual = annual;
    }

    /**
     * Getter for History.
     * @return Returns the Map of String, GeneratedObject14
     */
    @JsonGetter("History")
    public Map<String, GeneratedObject14> getHistory() {
        return history;
    }

    /**
     * Setter for History.
     * @param history Value for Map of String, GeneratedObject14
     */
    @JsonSetter("History")
    public void setHistory(Map<String, GeneratedObject14> history) {
        this.history = history;
    }

    /**
     * Getter for Trend.
     * @return Returns the Map of String, GeneratedObject15
     */
    @JsonGetter("Trend")
    public Map<String, GeneratedObject15> getTrend() {
        return trend;
    }

    /**
     * Setter for Trend.
     * @param trend Value for Map of String, GeneratedObject15
     */
    @JsonSetter("Trend")
    public void setTrend(Map<String, GeneratedObject15> trend) {
        this.trend = trend;
    }

    /**
     * Getter for Annual.
     * @return Returns the Map of String, GeneratedObject16
     */
    @JsonGetter("Annual")
    public Map<String, GeneratedObject16> getAnnual() {
        return annual;
    }

    /**
     * Setter for Annual.
     * @param annual Value for Map of String, GeneratedObject16
     */
    @JsonSetter("Annual")
    public void setAnnual(Map<String, GeneratedObject16> annual) {
        this.annual = annual;
    }

    /**
     * Converts this Earnings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Earnings [" + "history=" + history + ", trend=" + trend + ", annual=" + annual
                + "]";
    }

    /**
     * Builds a new {@link Earnings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Earnings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(history, trend, annual);
        return builder;
    }

    /**
     * Class to build instances of {@link Earnings}.
     */
    public static class Builder {
        private Map<String, GeneratedObject14> history;
        private Map<String, GeneratedObject15> trend;
        private Map<String, GeneratedObject16> annual;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  history  Map of String, value for history.
         * @param  trend  Map of String, value for trend.
         * @param  annual  Map of String, value for annual.
         */
        public Builder(Map<String, GeneratedObject14> history, Map<String, GeneratedObject15> trend,
                Map<String, GeneratedObject16> annual) {
            this.history = history;
            this.trend = trend;
            this.annual = annual;
        }

        /**
         * Setter for history.
         * @param  history  Map of String, value for history.
         * @return Builder
         */
        public Builder history(Map<String, GeneratedObject14> history) {
            this.history = history;
            return this;
        }

        /**
         * Setter for trend.
         * @param  trend  Map of String, value for trend.
         * @return Builder
         */
        public Builder trend(Map<String, GeneratedObject15> trend) {
            this.trend = trend;
            return this;
        }

        /**
         * Setter for annual.
         * @param  annual  Map of String, value for annual.
         * @return Builder
         */
        public Builder annual(Map<String, GeneratedObject16> annual) {
            this.annual = annual;
            return this;
        }

        /**
         * Builds a new {@link Earnings} object using the set fields.
         * @return {@link Earnings}
         */
        public Earnings build() {
            return new Earnings(history, trend, annual);
        }
    }
}
